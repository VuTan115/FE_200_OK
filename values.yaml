USER-SUPPLIED VALUES:
affinity: {}
autoscaling:
  enabled: false
  maxReplicas: 100
  minReplicas: 1
  targetCPUUtilizationPercentage: 80
fullnameOverride: ""
healthcheck:
  livenessProbe:
    httpGet:
      path: /healthz
      port: http
    initialDelaySeconds: 30
    periodSeconds: 6
    timeoutSeconds: 5
  readinessProbe:
    httpGet:
      path: /healthz
      port: http
    initialDelaySeconds: 30
    periodSeconds: 6
    timeoutSeconds: 5
image:
  pullPolicy: IfNotPresent
  repository: aqaurius6666/cookie-fe
  tag: bce33d5f
imagePullSecrets: []
ingress:
  annotations: {}
  className: ""
  enabled: false
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
nameOverride: ""
nginx:
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  serverBlock: |
    proxy_cache_path /tmp/image levels=1:2 keys_zone=image_cache:30m use_temp_path=off inactive=7d max_size=2G loader_files=100 loader_sleep=50 loader_threshold=200;
    proxy_cache_valid 604800s; # 7 days
    proxy_cache_lock on;
    proxy_cache_use_stale updating;
    proxy_buffer_size 16k;
    proxy_buffers 16 16k;
    proxy_buffering on;
    proxy_http_version 1.1;
    proxy_ignore_headers Vary;
    proxy_ignore_headers Expires;
    proxy_ignore_headers Set-Cookie;
    proxy_ignore_headers Cache-Control;

    proxy_cache_path /tmp/static levels=1:2 keys_zone=STATIC:10m inactive=5m use_temp_path=off;
    server {
      listen 8080;
      resolver kube-dns.kube-system valid=10s;
      server_name cookie.aqaurius6666.space;
      

      location ~ ^\/api\/(.*)$  {
          proxy_set_header Host $http_host;
          proxy_pass         http://cookie-be:3000;
          proxy_redirect     off;
          proxy_set_header   Host $host;
        }
      location /_next/static {
        proxy_cache STATIC;
        proxy_pass http://cookie-fe:3000;
        add_header X-Cache-Status $upstream_cache_status;
      }

      location /_next/image {
            proxy_pass http://cookie-fe:3000;

            # request_uri is important because images have GET params which define quality, url and size
            # $http_accept is important because it changes the response type of next/image
            proxy_cache_key "$request_uri$http_accept";
            add_header X-Cache-Status $upstream_cache_status;
            proxy_cache image_cache;
      }
      location ~ ^/(?!api) {
        proxy_set_header Host $http_host;

        proxy_pass http://cookie-fe:3000;
      }
    }
  service:
    ports:
      http: 8080
    type: ClusterIP
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
resources:
  limits:
    cpu: 700m
    memory: 400Mi
  requests:
    cpu: 500m
    memory: 128Mi
securityContext: {}
service:
  port: 3000
  type: ClusterIP
serviceAccount:
  annotations: {}
  create: true
  name: ""
sish-client:
  dns_resolver:
    enabled: false
  enabled: true
  service:
    name: nginx-ssh-tunnel
  services:
    sish:
      domain: 10.10.10.11
      from:
        domain: cookie-fe-nginx
        port: 8080
      port: 22222
      request:
        domain: cookie
        port: 80
tolerations: []
